{"version":3,"sources":["components/AddTodo/index.jsx","components/TodoList/index.jsx","data/initTodo.js","App.jsx","useApp.js","reportWebVitals.js","index.jsx"],"names":["AddTodo","props","addInputValue","onChangeTodo","handleAddTodo","className","type","placeholder","value","onChange","onKeyDown","TodoList","todoList","handleDeleteTodo","map","todo","title","onClick","id","INIT_TODO_LIST","App","React","useState","setTodoList","setAddInputValue","uniqueId","setUniqueId","e","target","key","nextUniqueId","targetId","targetTitle","window","confirm","newTodoList","filter","useApp","state","actions","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAcaA,EAAU,SAACC,GAAU,IAExBC,EAA+CD,EAA/CC,cAAeC,EAAgCF,EAAhCE,aAAcC,EAAkBH,EAAlBG,cAErC,OACE,0BAASC,UAAU,cAAnB,UACE,oBAAIA,UAAU,YAAd,sBACA,uBACEC,KAAK,OACLC,YAAY,WACZC,MAAON,EACPO,SAAUN,EACVO,UAAWN,QCZNO,G,MAAW,SAACV,GAAU,IAEzBW,EAA+BX,EAA/BW,SAAUC,EAAqBZ,EAArBY,iBAElB,OACE,yBAASR,UAAU,cAAnB,SACE,oBAAIA,UAAU,WAAd,SACGO,EAASE,KAAI,SAACC,GAAD,OACZ,qBAAkBV,UAAU,OAA5B,UACE,sBAAMA,UAAU,YAAhB,SAA6BU,EAAKC,QAClC,mBACEX,UAAU,gCACVY,QAAS,kBAAMJ,EAAiBE,EAAKG,GAAIH,EAAKC,YAJzCD,EAAKG,a,OCtBXC,EAAiB,CAC5B,CACED,GAAI,EACJF,MAAO,SAET,CACEE,GAAI,EACJF,MAAO,UC6BII,G,MAxBH,WAAM,MCCI,WAAM,MAGMC,IAAMC,SAASH,GAHrB,mBAGnBP,EAHmB,KAGTW,EAHS,OAKgBF,IAAMC,SAAS,IAL/B,mBAKnBpB,EALmB,KAKJsB,EALI,OAOMH,IAAMC,SFTV,GEEF,mBAOnBG,EAPmB,KAOTC,EAPS,KA2E1B,MAAO,CACL,CACEd,WACAV,iBAEF,CACEC,aAnEiB,SAACwB,GACpBH,EAAiBG,EAAEC,OAAOpB,QAmExBJ,cA5DkB,SAACuB,GAErB,GAAc,UAAVA,EAAEE,KAAqC,KAAlB3B,EAAsB,CAC7C,IAAM4B,EAAeL,EAAW,EAgBhCF,EAAY,GAAD,mBACNX,GADM,CAET,CACEM,GAAIY,EACJd,MAAOd,MAIXwB,EAAYI,GAEZN,EAAiB,MAgCjBX,iBAxBqB,SAACkB,EAAUC,GAClC,GAAIC,OAAOC,QAAP,gBAAmBF,EAAnB,qEAAiD,CAGnD,IAAMG,EAAcvB,EAASwB,QAAO,SAACrB,GAAD,OAAUA,EAAKG,KAAOa,KAQ1DR,EAAYY,ODtESE,GAFT,mBAETC,EAFS,KAEFC,EAFE,KAIhB,OACE,sBAAKlC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,uBAEA,cAAC,EAAD,CACEH,cAAeoC,EAAMpC,cACrBC,aAAcoC,EAAQpC,aACtBC,cAAemC,EAAQnC,gBAGxBkC,EAAM1B,SAAS4B,OAAS,GACvB,cAAC,EAAD,CACE5B,SAAU0B,EAAM1B,SAChBC,iBAAkB0B,EAAQ1B,wBEjBrB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa1735e5.chunk.js","sourcesContent":["/**\n * AddTodo\n *\n * @package components\n */\nimport React from \"react\";\n/* styles */\nimport \"./style.css\";\n\n/**\n * AddTodo\n * @param {*} props\n * @returns\n */\nexport const AddTodo = (props) => {\n  /* props */\n  const { addInputValue, onChangeTodo, handleAddTodo } = props;\n\n  return (\n    <section className=\"common-area\">\n      <h2 className=\"add-title\">ADD TODO</h2>\n      <input\n        type=\"text\"\n        placeholder=\"New Todo\"\n        value={addInputValue}\n        onChange={onChangeTodo}\n        onKeyDown={handleAddTodo}\n      />\n    </section>\n  );\n};\n","/**\n * TodoList\n *\n * @package components\n */\nimport React from \"react\";\n/* styles */\nimport \"./style.css\";\n\n/**\n * TodoList\n * @param {*} props\n * @returns\n */\nexport const TodoList = (props) => {\n  /* props */\n  const { todoList, handleDeleteTodo } = props;\n\n  return (\n    <section className=\"common-area\">\n      <ul className=\"todolist\">\n        {todoList.map((todo) => (\n          <li key={todo.id} className=\"todo\">\n            <span className=\"todo-task\">{todo.title}</span>\n            <i\n              className=\"far fa-trash-alt delete fa-lg\"\n              onClick={() => handleDeleteTodo(todo.id, todo.title)}\n            ></i>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","export const INIT_TODO_LIST = [\n  {\n    id: 1,\n    title: \"Todo1\",\n  },\n  {\n    id: 2,\n    title: \"Todo2\",\n  },\n];\n\nexport const INIT_UNIQUE_ID = 2;\n","/**\n * App\n */\nimport React from \"react\";\n/* components */\nimport { AddTodo } from \"./components/AddTodo\";\nimport { TodoList } from \"./components/TodoList\";\n/* hooks */\nimport { useApp } from \"./useApp\";\n/* styles */\nimport \"./App.css\";\n\nconst App = () => {\n  /* hooks */\n  const [state, actions] = useApp();\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Todo List</h1>\n      {/* Todo追加エリア */}\n      <AddTodo\n        addInputValue={state.addInputValue}\n        onChangeTodo={actions.onChangeTodo}\n        handleAddTodo={actions.handleAddTodo}\n      />\n      {/* Todoリスト一覧表示 */}\n      {state.todoList.length > 0 && (\n        <TodoList\n          todoList={state.todoList}\n          handleDeleteTodo={actions.handleDeleteTodo}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","/**\n * useApp\n *\n * @package hooks\n */\nimport React from \"react\";\n/* data */\nimport { INIT_TODO_LIST, INIT_UNIQUE_ID } from \"./data/initTodo\";\n\n/**\n * useApp\n * @returns\n */\nexport const useApp = () => {\n  /* state */\n  /* todo list */\n  const [todoList, setTodoList] = React.useState(INIT_TODO_LIST);\n  /* add input title */\n  const [addInputValue, setAddInputValue] = React.useState(\"\");\n  /* todo 採番ID */\n  const [uniqueId, setUniqueId] = React.useState(INIT_UNIQUE_ID);\n\n  /* actions */\n  /**\n   * addInputValueの変更処理\n   * @param {*} e\n   */\n  const onChangeTodo = (e) => {\n    setAddInputValue(e.target.value);\n  };\n\n  /**\n   * Todo新規登録処理\n   * @param {*} e\n   */\n  const handleAddTodo = (e) => {\n    //  エンターキーが押された時にTodoを追加する\n    if (e.key === \"Enter\" && addInputValue !== \"\") {\n      const nextUniqueId = uniqueId + 1;\n      // Todo追加処理\n      // 元の配列を破壊しないように配列のコピーを作成して、その値でstateを更新する\n      // pushでの配列追加は元の配列の値を変更するのでエラーになる\n\n      // concatの処理\n      // setTodoList(\n      //   // concatとpushの違い\n      //   // https://kskpblog.com/javascript-array-add/\n      //   todoList.concat({\n      //     id: nextUniqueId,\n      //     title: addInputValue,\n      //   })\n      // );\n\n      // スプレッド構文の処理\n      setTodoList([\n        ...todoList,\n        {\n          id: nextUniqueId,\n          title: addInputValue,\n        },\n      ]);\n      // 採番IDを更新\n      setUniqueId(nextUniqueId);\n      // todo追加後、入力値をリセット\n      setAddInputValue(\"\");\n    }\n  };\n\n  /**\n   * Todo削除処理\n   * @param {*} targetId\n   */\n  const handleDeleteTodo = (targetId, targetTitle) => {\n    if (window.confirm(`「${targetTitle}」のtodoを削除しますか？`)) {\n      // 削除するid以外のtodoリストを再編集\n      // filterを用いた方法\n      const newTodoList = todoList.filter((todo) => todo.id !== targetId);\n\n      // 削除するTodoの配列番号を取り出してspliceで削除する方法もある\n      // const newTodoList = [...todoList];\n      // const deleteIndex = newTodoList.findIndex((todo) => todo.id === targetId);\n      // newTodoList.splice(deleteIndex, 1);\n\n      // todoを削除したtodo listで更新\n      setTodoList(newTodoList);\n    }\n  };\n\n  return [\n    {\n      todoList,\n      addInputValue,\n    },\n    {\n      onChangeTodo,\n      handleAddTodo,\n      handleDeleteTodo,\n    },\n  ];\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}